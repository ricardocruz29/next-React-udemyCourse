{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/ricardo/Desktop/next-React-udemyCourse/05-datafetching/pages/last-sales.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\n\nfunction LastSalesPage() {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState(),\n      sales = _useState[0],\n      setSales = _useState[1];\n\n  var _useState2 = useState(false),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  useEffect(function () {\n    setLoading(true);\n    fetch(\"https://nextjs-course-f25e2-default-rtdb.firebaseio.com/sales.json\").then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      //firebase returns in a form of object. Transform to array\n      var transformedSales = [];\n\n      for (var key in data) {\n        transformedSales.push({\n          id: key,\n          username: data[key].username,\n          volume: data[key].volume\n        });\n      }\n\n      setSales(transformedSales);\n      setLoading(false);\n    });\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading ....\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: sales.map(function (sale) {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [sale.username, \" - $\", sale.volume]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, _this)\n      }, sale.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, _this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LastSalesPage, \"7CGCTACew6KgYMzY3D5Ezh9T7fY=\");\n\n_c = LastSalesPage;\nexport default LastSalesPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LastSalesPage\");","map":{"version":3,"sources":["/home/ricardo/Desktop/next-React-udemyCourse/05-datafetching/pages/last-sales.js"],"names":["useEffect","useState","LastSalesPage","sales","setSales","loading","setLoading","fetch","then","res","json","data","transformedSales","key","push","id","username","volume","map","sale"],"mappings":";;;;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;AAEA,SAASC,aAAT,GAAyB;AAAA;;AAAA;;AAAA,kBACGD,QAAQ,EADX;AAAA,MAChBE,KADgB;AAAA,MACTC,QADS;;AAAA,mBAEOH,QAAQ,CAAC,KAAD,CAFf;AAAA,MAEhBI,OAFgB;AAAA,MAEPC,UAFO;;AAIvBN,EAAAA,SAAS,CAAC,YAAM;AACdM,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAC,IAAAA,KAAK,CAAC,oEAAD,CAAL,CACGC,IADH,CACQ,UAACC,GAAD;AAAA,aAASA,GAAG,CAACC,IAAJ,EAAT;AAAA,KADR,EAEGF,IAFH,CAEQ,UAACG,IAAD,EAAU;AACd;AACA,UAAMC,gBAAgB,GAAG,EAAzB;;AACA,WAAK,IAAMC,GAAX,IAAkBF,IAAlB,EAAwB;AACtBC,QAAAA,gBAAgB,CAACE,IAAjB,CAAsB;AACpBC,UAAAA,EAAE,EAAEF,GADgB;AAEpBG,UAAAA,QAAQ,EAAEL,IAAI,CAACE,GAAD,CAAJ,CAAUG,QAFA;AAGpBC,UAAAA,MAAM,EAAEN,IAAI,CAACE,GAAD,CAAJ,CAAUI;AAHE,SAAtB;AAKD;;AAEDb,MAAAA,QAAQ,CAACQ,gBAAD,CAAR;AACAN,MAAAA,UAAU,CAAC,KAAD,CAAV;AACD,KAfH;AAgBD,GAlBQ,EAkBN,EAlBM,CAAT;AAoBA,MAAID,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAEb,sBACE;AAAA,cACGF,KAAK,CAACe,GAAN,CAAU,UAACC,IAAD;AAAA,0BACT;AAAA,+BACE;AAAA,qBACGA,IAAI,CAACH,QADR,UACsBG,IAAI,CAACF,MAD3B;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,SAASE,IAAI,CAACJ,EAAd;AAAA;AAAA;AAAA;AAAA,eADS;AAAA,KAAV;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GArCQb,a;;KAAAA,a;AAuCT,eAAeA,aAAf","sourcesContent":["import { useEffect, useState } from \"react\";\n\nfunction LastSalesPage() {\n  const [sales, setSales] = useState();\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    setLoading(true);\n    fetch(\"https://nextjs-course-f25e2-default-rtdb.firebaseio.com/sales.json\")\n      .then((res) => res.json())\n      .then((data) => {\n        //firebase returns in a form of object. Transform to array\n        const transformedSales = [];\n        for (const key in data) {\n          transformedSales.push({\n            id: key,\n            username: data[key].username,\n            volume: data[key].volume,\n          });\n        }\n\n        setSales(transformedSales);\n        setLoading(false);\n      });\n  }, []);\n\n  if (loading) return <p>Loading ....</p>;\n\n  return (\n    <ul>\n      {sales.map((sale) => (\n        <li key={sale.id}>\n          <p>\n            {sale.username} - ${sale.volume}\n          </p>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nexport default LastSalesPage;\n"]},"metadata":{},"sourceType":"module"}