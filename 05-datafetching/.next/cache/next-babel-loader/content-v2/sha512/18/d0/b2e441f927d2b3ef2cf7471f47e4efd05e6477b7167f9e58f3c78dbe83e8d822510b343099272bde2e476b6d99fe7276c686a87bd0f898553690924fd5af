{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/ricardo/Desktop/next-React-udemyCourse/05-datafetching/pages/[id].js\";\n\nfunction ProductDetailPage({\n  loadedProduct\n}) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: loadedProduct.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: loadedProduct.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\nexport async function getStaticProps(context) {\n  const productId = context.params.id;\n  const filePath = path.join(process.cwd(), \"data\", \"dummy-backend.json\"); //current working directory -> root + get the dummy data\n\n  const jsonData = await fs.readFileSync(filePath);\n  const data = JSON.parse(jsonData);\n  if (!data) return {\n    redirect: {\n      destination: \"/no-data\"\n    }\n  }; //if some error happens, it can be redirected to a specific error page\n\n  const product = data.products.find(p => p.id === productId);\n  if (!product) return {\n    notFound: true\n  }; //if there is no products, return to page 404\n\n  return {\n    props: {\n      loadedProduct: product\n    },\n    revalidate: 10\n  };\n}\nexport async function getStaticPaths() {\n  return {\n    paths: [{\n      params: {\n        id: \"p1\"\n      }\n    }, {\n      params: {\n        id: \"p2\"\n      }\n    }, {\n      params: {\n        id: \"p3\"\n      }\n    }],\n    fallback: false\n  };\n}\nexport default ProductDetailPage;","map":{"version":3,"sources":["/home/ricardo/Desktop/next-React-udemyCourse/05-datafetching/pages/[id].js"],"names":["ProductDetailPage","loadedProduct","title","description","getStaticProps","context","productId","params","id","filePath","path","join","process","cwd","jsonData","fs","readFileSync","data","JSON","parse","redirect","destination","product","products","find","p","notFound","props","revalidate","getStaticPaths","paths","fallback"],"mappings":";;;;AAAA,SAASA,iBAAT,CAA2B;AAAEC,EAAAA;AAAF,CAA3B,EAA8C;AAC5C,sBACE;AAAA,4BACE;AAAA,gBAAKA,aAAa,CAACC;AAAnB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBAAID,aAAa,CAACE;AAAlB;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAMD;;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C,QAAMC,SAAS,GAAGD,OAAO,CAACE,MAAR,CAAeC,EAAjC;AAEA,QAAMC,QAAQ,GAAGC,IAAI,CAACC,IAAL,CAAUC,OAAO,CAACC,GAAR,EAAV,EAAyB,MAAzB,EAAiC,oBAAjC,CAAjB,CAH4C,CAG6B;;AACzE,QAAMC,QAAQ,GAAG,MAAMC,EAAE,CAACC,YAAH,CAAgBP,QAAhB,CAAvB;AACA,QAAMQ,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWL,QAAX,CAAb;AAEA,MAAI,CAACG,IAAL,EAAW,OAAO;AAAEG,IAAAA,QAAQ,EAAE;AAAEC,MAAAA,WAAW,EAAE;AAAf;AAAZ,GAAP,CAPiC,CAOiB;;AAE7D,QAAMC,OAAO,GAAGL,IAAI,CAACM,QAAL,CAAcC,IAAd,CAAoBC,CAAD,IAAOA,CAAC,CAACjB,EAAF,KAASF,SAAnC,CAAhB;AAEA,MAAI,CAACgB,OAAL,EAAc,OAAO;AAAEI,IAAAA,QAAQ,EAAE;AAAZ,GAAP,CAX8B,CAWH;;AAEzC,SAAO;AACLC,IAAAA,KAAK,EAAE;AACL1B,MAAAA,aAAa,EAAEqB;AADV,KADF;AAILM,IAAAA,UAAU,EAAE;AAJP,GAAP;AAMD;AAED,OAAO,eAAeC,cAAf,GAAgC;AACrC,SAAO;AACLC,IAAAA,KAAK,EAAE,CACL;AACEvB,MAAAA,MAAM,EAAE;AACNC,QAAAA,EAAE,EAAE;AADE;AADV,KADK,EAML;AACED,MAAAA,MAAM,EAAE;AACNC,QAAAA,EAAE,EAAE;AADE;AADV,KANK,EAWL;AACED,MAAAA,MAAM,EAAE;AACNC,QAAAA,EAAE,EAAE;AADE;AADV,KAXK,CADF;AAkBLuB,IAAAA,QAAQ,EAAE;AAlBL,GAAP;AAoBD;AAED,eAAe/B,iBAAf","sourcesContent":["function ProductDetailPage({ loadedProduct }) {\n  return (\n    <>\n      <h1>{loadedProduct.title}</h1>\n      <p>{loadedProduct.description}</p>\n    </>\n  );\n}\n\nexport async function getStaticProps(context) {\n  const productId = context.params.id;\n\n  const filePath = path.join(process.cwd(), \"data\", \"dummy-backend.json\"); //current working directory -> root + get the dummy data\n  const jsonData = await fs.readFileSync(filePath);\n  const data = JSON.parse(jsonData);\n\n  if (!data) return { redirect: { destination: \"/no-data\" } }; //if some error happens, it can be redirected to a specific error page\n\n  const product = data.products.find((p) => p.id === productId);\n\n  if (!product) return { notFound: true }; //if there is no products, return to page 404\n\n  return {\n    props: {\n      loadedProduct: product,\n    },\n    revalidate: 10,\n  };\n}\n\nexport async function getStaticPaths() {\n  return {\n    paths: [\n      {\n        params: {\n          id: \"p1\",\n        },\n      },\n      {\n        params: {\n          id: \"p2\",\n        },\n      },\n      {\n        params: {\n          id: \"p3\",\n        },\n      },\n    ],\n    fallback: false,\n  };\n}\n\nexport default ProductDetailPage;\n"]},"metadata":{},"sourceType":"module"}