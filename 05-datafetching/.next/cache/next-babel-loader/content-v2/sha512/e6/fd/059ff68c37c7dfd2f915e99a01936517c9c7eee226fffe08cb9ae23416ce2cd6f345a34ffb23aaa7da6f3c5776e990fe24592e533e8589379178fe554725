{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/ricardo/Desktop/next-React-udemyCourse/05-datafetching/pages/[id].js\";\n\nfunction ProductDetailPage(_ref) {\n  var loadedProduct = _ref.loadedProduct;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: loadedProduct.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: loadedProduct.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_c = ProductDetailPage;\nexport var __N_SSG = true;\nexport default ProductDetailPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductDetailPage\");","map":{"version":3,"sources":["/home/ricardo/Desktop/next-React-udemyCourse/05-datafetching/pages/[id].js"],"names":["ProductDetailPage","loadedProduct","title","description"],"mappings":";;;;AAAA,SAASA,iBAAT,OAA8C;AAAA,MAAjBC,aAAiB,QAAjBA,aAAiB;AAC5C,sBACE;AAAA,4BACE;AAAA,gBAAKA,aAAa,CAACC;AAAnB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBAAID,aAAa,CAACE;AAAlB;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAMD;;KAPQH,iB;;AAqDT,eAAeA,iBAAf","sourcesContent":["function ProductDetailPage({ loadedProduct }) {\n  return (\n    <>\n      <h1>{loadedProduct.title}</h1>\n      <p>{loadedProduct.description}</p>\n    </>\n  );\n}\n\nexport async function getStaticProps(context) {\n  const productId = context.params.id;\n\n  const filePath = path.join(process.cwd(), \"data\", \"dummy-backend.json\"); //current working directory -> root + get the dummy data\n  const jsonData = await fs.readFileSync(filePath);\n  const data = JSON.parse(jsonData);\n\n  if (!data) return { redirect: { destination: \"/no-data\" } }; //if some error happens, it can be redirected to a specific error page\n\n  const product = data.products.find((p) => p.id === productId);\n\n  if (!product) return { notFound: true }; //if there is no products, return to page 404\n\n  return {\n    props: {\n      loadedProduct: product,\n    },\n    revalidate: 10,\n  };\n}\n\nexport async function getStaticPaths() {\n  return {\n    paths: [\n      {\n        params: {\n          id: \"p1\",\n        },\n      },\n      {\n        params: {\n          id: \"p2\",\n        },\n      },\n      {\n        params: {\n          id: \"p3\",\n        },\n      },\n    ],\n    fallback: false,\n  };\n}\n\nexport default ProductDetailPage;\n"]},"metadata":{},"sourceType":"module"}